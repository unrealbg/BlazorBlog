@page "/admin/manage-subscribers"

@rendermode @(new InteractiveServerRenderMode(prerender: false))

@inject ISubscribeService SubscriberService

<PageTitle>@Utils.GetPageTitle("Manage Subscribers")</PageTitle>

<AdminHeader Title="Manage Subscribers" />

@if (_isLoading)
{
    <Loader LoaderText="Fetching subscribers..." />
}

<QuickGrid ItemsProvider="_subscribersProvider" Pagination="_paginationState" class="table table-bordered table-striped">
    <PropertyColumn Property="c => c.Name" />
    <PropertyColumn Property="c => c.Email" />
    <PropertyColumn Property="c => c.SubscribedOn" Format="dd-MMM-yyyy hh:mm:ss" Title="Subscribed On" />
</QuickGrid>
<Paginator State="_paginationState" />

@code {
    private bool _isLoading;
    private GridItemsProvider<Subscriber>? _subscribersProvider;

    private const int PageSize = 5;
    private PaginationState _paginationState = new PaginationState()
        {
            ItemsPerPage = PageSize
        };

    protected override void OnInitialized()
    {
        _subscribersProvider = async request =>
        {
            _isLoading = true;
            StateHasChanged();

            var result = await SubscriberService.GetSubscribersAsync(request.StartIndex, request.Count ?? PageSize);

            _isLoading = false;
            StateHasChanged();

            return GridItemsProviderResult.From(result.Records, result.TotalCount);
        };
    }
}
