@if(Posts.Length > 0)
{
	<div class="row">
	<div class="col-lg-6">
		<div class="card border-0 mb-4 box-shadow h-xl-300">
			<div style="background-image: url(@_first.Image); height: 150px;    background-size: cover;    background-repeat: no-repeat;"></div>
			<div class="card-body px-0 pb-0 d-flex flex-column align-items-start">
				<h2 class="h4 font-weight-bold">
					@if (!string.IsNullOrWhiteSpace(_first.Slug))
                    {
                        <a class="text-dark" href="/posts/@_first.Slug">@_first.Title</a>
                    }
                    else
                    {
                        <span class="text-dark">@_first.Title</span>
                    }
				</h2>
				<p class="card-text">
					@_first.Introduction
				</p>
				<div>
					<small class="d-block">@_first.AuthorName</small>
					<small class="text-muted">@_first.PublishedAtDisplay</small>
				</div>
			</div>
		</div>
	</div>
	<div class="col-lg-6">
		<div class="flex-md-row mb-4 box-shadow h-xl-300">
				@foreach (var post in Posts.Skip(1))
				{
                    <div class="mb-3 d-flex align-items-center">
                        <img height="80" width="80" src="@post.Image">
                        <div class="pl-3">
                            <h2 class="mb-2 h6 font-weight-bold">
                                @if (!string.IsNullOrWhiteSpace(post.Slug))
                                {
                                    <a class="text-dark" href="/posts/@post.Slug">@post.Title</a>
                                }
                                else
                                {
                                    <span class="text-dark">@post.Title</span>
                                }
                            </h2>
                            <div class="card-text text-muted small">
                                @post.AuthorName in <a href="/@post.CategorySlug-posts" title="@post.CategoryName Posts">@post.CategoryName</a>
                            </div>
                            <small class="text-muted">@post.PublishedAtDisplay</small>
                        </div>
                    </div>
				}
		</div>
	</div>
</div>
}

@code {
	private BlogPostVm _first = default!;

	[Parameter, EditorRequired]
	public BlogPostVm[] Posts { get; set; } = [];

	protected override void OnParametersSet()
	{
        if (Posts.Length > 0)
        {
            _first = Posts.First();
        }
	}
}
