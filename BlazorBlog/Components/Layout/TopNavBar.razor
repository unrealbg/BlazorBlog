@using BlazorBlog.Services
<!--------------------------------------
NAVBAR
--------------------------------------->
@inject ICategoryService CategoryService

<nav class="topnav navbar navbar-expand-lg navbar-light bg-white fixed-top">
    <div class="container">
        <a class="navbar-brand" href="/"><strong>Blazor Blog</strong></a>
        <button class="navbar-toggler collapsed" type="button" aria-controls="navbarColor02" aria-expanded="false" aria-label="Toggle navigation"
                onclick="toggleMenu(event)">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="navbar-collapse collapse" id="top-navbar-menu-wrapper" style="">
            <ul class="navbar-nav mr-auto d-flex align-items-center">
                <li class="nav-item">
                    <a class="nav-link" href="/">Home <span class="sr-only">(current)</span></a>
                </li>
                @foreach (var category in this.categories)
                {
                    <li class="nav-item">
                        <a class="nav-link" href="@category.Slug-posts" title="@category.Name Posts">@category.Name</a>
                    </li>
                }
            </ul>
            <ul class="navbar-nav ml-auto d-flex align-items-center">
                <AuthorizeView>
                    <Authorized>
                        <li class="nav-item">
                            <a class="nav-link" href="admin/dashboard">@context.User.GetUserName()</a>
                        </li>
                        <li class="nav-item highlight">
                            <LogoutForm ButtonClasses="nav-link" />
                        </li>
                    </Authorized>
                    <NotAuthorized>
                        <li class="nav-item highlight">
                            <a class="nav-link" href="account/login">Login</a>
                        </li>
                    </NotAuthorized>
                </AuthorizeView>
            </ul>
        </div>
    </div>
</nav>
<!-- End Navbar -->
@code {
    private Category[] categories = [];
    private const int MaxCategoryToShow = 5;

    protected override async Task OnInitializedAsync()
    {
        var allCategories = await CategoryService.GetCategoriesAsync();

        this.categories = allCategories
            .Where(c => c.ShowOnNavBar)
            .Take(MaxCategoryToShow)
            .ToArray();

        if (this.categories.Length < MaxCategoryToShow)
        {
            this.categories =
            [
                ..this.categories, 
                ..allCategories
                    .Where(c => !c.ShowOnNavBar)
                    .Take(MaxCategoryToShow - this.categories.Length)
            ];
        }
    }
}
